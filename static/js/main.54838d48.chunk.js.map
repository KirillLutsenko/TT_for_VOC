{"version":3,"sources":["components/Store/actions.js","App.jsx","components/Store/reducers.js","index.js"],"names":["changeFirstName","newFirstName","type","payload","changeSecondName","newSecondName","App","this","props","firstName","secondName","value","placeholder","onChange","event","target","React","PureComponent","WrappedMainComponent","connect","state","dispatch","bindActionCreators","initialState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"4QAGaA,EAAkB,SAAAC,GAAY,MAAK,CAC9CC,KAJsC,2BAKtCC,QAASF,IAGEG,EAAmB,SAAAC,GAAa,MAAK,CAChDH,KARuC,4BASvCC,QAASE,ICKEC,EAAb,4JACE,WAAU,IAAD,EAMHC,KAAKC,MAJPC,EAFK,EAELA,UACAC,EAHK,EAGLA,WACAV,EAJK,EAILA,gBACAI,EALK,EAKLA,iBAGF,OACE,6BACE,6BACE,2BACEF,KAAK,OACLS,MAAOF,EACPG,YAAY,aACZC,SAAU,SAACC,GACTd,EAAgBc,EAAMC,OAAOJ,WAInC,6BACE,2BACET,KAAK,OACLS,MAAOD,EACPE,YAAY,cACZC,SAAU,SAACC,GACTV,EAAiBU,EAAMC,OAAOJ,WAIpC,4BAAQT,KAAK,UAAb,eA/BR,GAAyBc,IAAMC,eAqClBC,EAAuBC,aA/CZ,SAAAC,GAAK,MAAK,CAChCX,UAAWW,EAAMX,UACjBC,WAAYU,EAAMV,eAGM,SAAAW,GAAQ,MAAK,CACrCrB,gBAAiBsB,YAAmBtB,EAAiBqB,GACrDjB,iBAAkBkB,YAAmBlB,EAAkBiB,MAwCrBF,CAGlCb,G,OClDIiB,EAAe,CACnBd,UAAW,GACXC,WAAY,ICADc,EAAQC,aDGM,WAAmC,IAAlCL,EAAiC,uDAAzBG,EAAcG,EAAW,uCAC3D,OAAQA,EAAOxB,MACb,IFZoC,2BEalC,OAAO,2BACFkB,GADL,IAEEX,UAAWiB,EAAOvB,UAGtB,IFjBqC,4BEkBnC,OAAO,2BACFiB,GADL,IAEEV,WAAYgB,EAAOvB,UAGvB,QACE,OAAOiB,MChBbO,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAACN,EAAD,OAEFW,SAASC,eAAe,W","file":"static/js/main.54838d48.chunk.js","sourcesContent":["export const ACTION_CHANGE_FIRST_NAME = 'ACTION_CHANGE_FIRST_NAME';\nexport const ACTION_CHANGE_SECOND_NAME = 'ACTION_CHANGE_SECOND_NAME';\n\nexport const changeFirstName = newFirstName => ({\n  type: ACTION_CHANGE_FIRST_NAME,\n  payload: newFirstName,\n});\n\nexport const changeSecondName = newSecondName => ({\n  type: ACTION_CHANGE_SECOND_NAME,\n  payload: newSecondName,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { changeFirstName, changeSecondName } from './components/Store/actions';\n\nconst putStateToProps = state => ({\n  firstName: state.firstName,\n  secondName: state.secondName,\n});\n\nconst putActionsToProps = dispatch => ({\n  changeFirstName: bindActionCreators(changeFirstName, dispatch),\n  changeSecondName: bindActionCreators(changeSecondName, dispatch),\n});\n\nexport class App extends React.PureComponent {\n  render() {\n    const {\n      firstName,\n      secondName,\n      changeFirstName,\n      changeSecondName,\n    } = this.props;\n\n    return (\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            value={firstName}\n            placeholder=\"First Name\"\n            onChange={(event) => {\n              changeFirstName(event.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            value={secondName}\n            placeholder=\"Second Name\"\n            onChange={(event) => {\n              changeSecondName(event.target.value);\n            }}\n          />\n        </div>\n        <button type=\"button\">Log In</button>\n      </div>\n    );\n  }\n}\n\nexport const WrappedMainComponent = connect(\n  putStateToProps,\n  putActionsToProps,\n)(App);\n","import {\n  ACTION_CHANGE_FIRST_NAME,\n  ACTION_CHANGE_SECOND_NAME,\n} from './actions';\n\nconst initialState = {\n  firstName: '',\n  secondName: '',\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_CHANGE_FIRST_NAME:\n      return {\n        ...state,\n        firstName: action.payload,\n      };\n\n    case ACTION_CHANGE_SECOND_NAME:\n      return {\n        ...state,\n        secondName: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { WrappedMainComponent } from './App';\nimport { rootReducer } from './components/Store/reducers';\n\nexport const store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <WrappedMainComponent />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}